{{- if .Release.IsInstall }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-keygen-redis-pvc
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "0"
spec:
{{- if .Values.redis.volumes.storageClass }}
  storageClassName: {{ .Values.redis.volumes.storageClass | default "local-path" }}
{{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.redis.volumes.size | default "1Gi" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-keygen-redis-deployment
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keygen-redis
  template:
    metadata:
      labels:
        app: keygen-redis
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}:{{ .Values.redis.tag }}
          imagePullPolicy:  {{ .Values.redis.pullPolicy }}
          ports:
            - containerPort: 6379
              name: redis-port
          volumeMounts:
            - name: redis-persistent-storage
              mountPath: /data
      volumes:
        - name: redis-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-keygen-redis-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-keygen-postgres-pvc
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "0"
spec:
{{- if .Values.postgres.volumes.storageClass }}
  storageClassName: {{ .Values.postgres.volumes.storageClass | default "local-path" }}
{{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.volumes.size | default "1Gi" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-keygen-postgres-deployment
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keygen-postgres
  template:
    metadata:
      labels:
        app: keygen-postgres
    spec:
      containers:
        - name: keygen-postgres
          image: {{ .Values.postgres.image }}:{{ .Values.postgres.tag }}
          imagePullPolicy:  {{ .Values.postgres.pullPolicy }}
          ports:
            - containerPort: 5432
              name: postgres-port
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.defaultDb }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.credentials.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.credentials.password }}
          volumeMounts:
            - name: keygen-postgres-persistent-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: keygen-postgres-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-keygen-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-keygen-redis-service
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "0"
spec:
  selector:
    app: keygen-redis
  ports:
    - protocol: TCP
      port: {{ .Values.redis.port }}
      targetPort: redis-port
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-keygen-postgres-service
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "0"
spec:
  selector:
    app: keygen-postgres
  ports:
    - protocol: TCP
      port: {{ .Values.postgres.port }}
      targetPort: postgres-port
{{- end }}
