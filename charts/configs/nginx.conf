upstream {{ .Values.keygen.config.apiHost }} {
  server 127.0.0.1:443;
}

server {
  listen 80;
  server_name {{ .Release.Name }}-keygen-api-service.{{ .Release.Namespace }}.svc.cluster.local;

  location / {
    proxy_pass https://{{ .Values.keygen.config.apiHost }};
    proxy_ssl_certificate         /etc/nginx/certs/client/tls.pem;
    proxy_ssl_certificate_key     /etc/nginx/certs/client/tls.key;
    proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
    proxy_ssl_trusted_certificate /etc/nginx/certs/client/trusted_ca_cert.crt;

    proxy_ssl_verify        on;
    proxy_ssl_verify_depth  2;
    proxy_ssl_session_reuse on;
  }
}

upstream keygen-api {
  server localhost:3000;
}

server {
  listen 443 ssl;
  server_name {{ .Values.keygen.config.apiHost }};

  ssl_certificate /etc/nginx/certs/server/tls.crt;
  ssl_certificate_key /etc/nginx/certs/server/tls.key;
  # ssl_verify_client optional;

  location / {
    # Assuming the service name for kengen-api is 'kengen-api'
    proxy_pass http://keygen-api;
    # => $host
    proxy_set_header Host $http_host;
    # => "https"
    proxy_set_header X-Forwarded-Proto $scheme;
    # => 0.0.0.0
    proxy_set_header X-Forwarded-Host $host;
    # => 3000
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Additional proxy settings if needed
  }
}


